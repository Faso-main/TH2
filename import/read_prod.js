const fs = require('fs');
const csv = require('csv-parser');

function analyzeCSV(filename) {
    console.log(`üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª: ${filename}`);
    console.log('='.repeat(50));
    
    let rowCount = 0;

    fs.createReadStream(filename)
        .pipe(csv({
            headers: ['product_id', 'category', 'name', 'price', 'available', 'specifications'],
            separator: ';', // –£–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            skipEmptyLines: true
        }))
        .on('data', (row) => {
            rowCount++;
            if (rowCount <= 5) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
                console.log(`\nüìù –°—Ç—Ä–æ–∫–∞ ${rowCount}:`);
                console.log(`   product_id: "${row.product_id}"`);
                console.log(`   category: "${row.category}"`);
                console.log(`   name: "${row.name}"`);
                console.log(`   price: "${row.price}"`);
                console.log(`   available: "${row.available}"`);
                console.log(`   specifications: "${row.specifications}"`);
            }
        })
        .on('end', () => {
            console.log('\n' + '='.repeat(50));
            console.log(`üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ: ${rowCount}`);
        })
        .on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error.message);
        });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
analyzeCSV('344608_–°–¢–ï.csv');