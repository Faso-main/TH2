/* eslint-disable no-unused-vars */
// modal/UserProfile.jsx
import { useState, useEffect } from 'react';
import { userAPI, draftsAPI, procurementsAPI } from '../services/api';
import './UserProfile.css';

// eslint-disable-next-line no-unused-vars
function UserProfile({ user, onClose }) {
  const [activeTab, setActiveTab] = useState('profile');
  const [userProcurements, setUserProcurements] = useState([]);
  const [userParticipations, setUserParticipations] = useState([]);
  const [drafts, setDrafts] = useState([]);
  const [procurementsLoading, setProcurementsLoading] = useState(false);
  const [participationsLoading, setParticipationsLoading] = useState(false);
  const [draftsLoading, setDraftsLoading] = useState(false);
  const [editing, setEditing] = useState(false);
  const [formData, setFormData] = useState({
    name: user?.name || '',
    email: user?.email || '',
    company_name: user?.company_name || '',
    phone_number: user?.phone_number || ''
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏
  useEffect(() => {
    if (activeTab === 'procurements') {
      loadUserProcurements();
    } else if (activeTab === 'participations') {
      loadUserParticipations();
    } else if (activeTab === 'drafts') {
      loadDrafts();
    }
  }, [activeTab]);

  const loadUserProcurements = async () => {
    setProcurementsLoading(true);
    try {
      const response = await userAPI.getMyProcurements();
      setUserProcurements(response.procurements || []);
    } catch (error) {
      console.error('Error loading procurements:', error);
      setUserProcurements([]);
    } finally {
      setProcurementsLoading(false);
    }
  };

  const loadUserParticipations = async () => {
    setParticipationsLoading(true);
    try {
      const response = await userAPI.getMyParticipations();
      setUserParticipations(response.participations || []);
    } catch (error) {
      console.error('Error loading participations:', error);
      setUserParticipations([]);
    } finally {
      setParticipationsLoading(false);
    }
  };

  const loadDrafts = async () => {
    setDraftsLoading(true);
    try {
      const response = await draftsAPI.getMyDrafts();
      setDrafts(response.drafts || []);
    } catch (error) {
      console.error('Error loading drafts:', error);
      setDrafts([]);
    } finally {
      setDraftsLoading(false);
    }
  };

  const handleEditToggle = () => {
    setEditing(!editing);
    if (editing) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      setFormData({
        name: user?.name || '',
        email: user?.email || '',
        company_name: user?.company_name || '',
        phone_number: user?.phone_number || ''
      });
    }
  };

  const handleSaveProfile = async () => {
    try {
      const response = await userAPI.updateProfile(formData);
      setEditing(false);
      alert('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
      if (response.user) {
        localStorage.setItem('currentUser', JSON.stringify(response.user));
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: ' + error.message);
    }
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('ru-RU').format(price);
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  const handleContinueDraft = (draft) => {
    console.log('Continue draft:', draft);
    alert(`–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞ "${draft.title}" –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫—É–ø–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
  };

  const handleDeleteDraft = async (draftId, draftTitle) => {
    if (window.confirm(`–£–¥–∞–ª–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ "${draftTitle}"?`)) {
      try {
        await draftsAPI.deleteDraft(draftId);
        loadDrafts(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        alert('–ß–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª–µ–Ω');
      } catch (error) {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: ' + error.message);
      }
    }
  };

  const handleCreateFromDraft = async (draft) => {
    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç –∑–∞–∫—É–ø–∫–∏
      const products = draft.products_data ? JSON.parse(draft.products_data) : [];
      
      const procurementData = {
        title: draft.title,
        description: draft.description,
        customer_name: draft.customer_name,
        customer_inn: draft.customer_inn,
        current_price: draft.estimated_price,
        law_type: draft.law_type,
        contract_terms: draft.contract_terms,
        location: draft.location,
        start_date: draft.start_date,
        end_date: draft.end_date,
        products: products.map(product => ({
          product_id: product.product_id,
          required_quantity: product.quantity,
          max_price: product.price_per_item
        }))
      };

      // –°–æ–∑–¥–∞–µ–º –∑–∞–∫—É–ø–∫—É –∏–∑ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
      const response = await procurementsAPI.create(procurementData);
      
      // –£–¥–∞–ª—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
      await draftsAPI.deleteDraft(draft.id);
      
      alert('–ó–∞–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ —á–µ—Ä–Ω–æ–≤–∏–∫–∞!');
      loadDrafts(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      onClose();
      
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫—É–ø–∫–∏ –∏–∑ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: ' + error.message);
    }
  };

  return (
    <div className="user-profile">
      <div className="profile-header">
        <h2>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
        <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏</p>
      </div>

      <div className="profile-tabs">
        <button 
          className={`tab-btn ${activeTab === 'profile' ? 'active' : ''}`}
          onClick={() => setActiveTab('profile')}
        >
          üë§ –ü—Ä–æ—Ñ–∏–ª—å
        </button>
        <button 
          className={`tab-btn ${activeTab === 'procurements' ? 'active' : ''}`}
          onClick={() => setActiveTab('procurements')}
        >
          üìã –ú–æ–∏ –∑–∞–∫—É–ø–∫–∏
        </button>
        <button 
          className={`tab-btn ${activeTab === 'participations' ? 'active' : ''}`}
          onClick={() => setActiveTab('participations')}
        >
          ü§ù –ú–æ–∏ —É—á–∞—Å—Ç–∏—è
        </button>
        <button 
          className={`tab-btn ${activeTab === 'drafts' ? 'active' : ''}`}
          onClick={() => setActiveTab('drafts')}
        >
          üìù –ú–æ–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏
        </button>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∞ –ü—Ä–æ—Ñ–∏–ª—å */}
      {activeTab === 'profile' && (
        <div className="tab-content">
          <div className="profile-info">
            <div className="info-section">
              <h3>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
              {editing ? (
                <div className="edit-form">
                  <div className="form-group">
                    <label>–§–ò–û</label>
                    <input
                      type="text"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û"
                    />
                  </div>
                  <div className="form-group">
                    <label>Email</label>
                    <input
                      type="email"
                      name="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                    />
                  </div>
                  <div className="form-group">
                    <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                    <input
                      type="text"
                      name="company_name"
                      value={formData.company_name}
                      onChange={handleInputChange}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
                    />
                  </div>
                  <div className="form-group">
                    <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                    <input
                      type="tel"
                      name="phone_number"
                      value={formData.phone_number}
                      onChange={handleInputChange}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                    />
                  </div>
                  <div className="form-actions">
                    <button className="btn-primary" onClick={handleSaveProfile}>
                      –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </button>
                    <button className="btn-outline" onClick={handleEditToggle}>
                      –û—Ç–º–µ–Ω–∞
                    </button>
                  </div>
                </div>
              ) : (
                <div className="info-display">
                  <div className="info-item">
                    <span className="label">–§–ò–û:</span>
                    <span className="value">{user?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                  </div>
                  <div className="info-item">
                    <span className="label">Email:</span>
                    <span className="value">{user?.email}</span>
                  </div>
                  <div className="info-item">
                    <span className="label">–ö–æ–º–ø–∞–Ω–∏—è:</span>
                    <span className="value">{user?.company_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                  </div>
                  <div className="info-item">
                    <span className="label">–ò–ù–ù:</span>
                    <span className="value">{user?.INN || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                  </div>
                  <div className="info-item">
                    <span className="label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                    <span className="value">{user?.phone_number || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                  </div>
                  <div className="info-item">
                    <span className="label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                    <span className="value">
                      {user?.created_at ? formatDate(user.created_at) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
                    </span>
                  </div>
                  <button className="btn-primary" onClick={handleEditToggle}>
                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {/* –í–∫–ª–∞–¥–∫–∞ –ú–æ–∏ –∑–∞–∫—É–ø–∫–∏ */}
      {activeTab === 'procurements' && (
        <div className="tab-content">
          <h3>–ú–æ–∏ –∑–∞–∫—É–ø–∫–∏</h3>
          
          {procurementsLoading ? (
            <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫—É–ø–æ–∫...</div>
          ) : userProcurements.length === 0 ? (
            <div className="empty-state">
              <p>–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫</p>
            </div>
          ) : (
            <div className="procurements-list">
              {userProcurements.map(procurement => (
                <div key={procurement.id} className="procurement-item">
                  <div className="procurement-info">
                    <h4>{procurement.title}</h4>
                    <div className="procurement-details">
                      <span className="status-badge">{procurement.status}</span>
                      <span>{formatPrice(procurement.current_price)} ‚ÇΩ</span>
                      <span>{procurement.products_count || 0} —Ç–æ–≤–∞—Ä–æ–≤</span>
                      <span>–°–æ–∑–¥–∞–Ω–∞: {formatDate(procurement.created_at)}</span>
                    </div>
                    {procurement.customer_name && (
                      <p className="customer">–ó–∞–∫–∞–∑—á–∏–∫: {procurement.customer_name}</p>
                    )}
                  </div>
                  <div className="procurement-actions">
                    <button className="btn-outline btn-small">
                      –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                    </button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      {/* –í–∫–ª–∞–¥–∫–∞ –ú–æ–∏ —É—á–∞—Å—Ç–∏—è */}
      {activeTab === 'participations' && (
        <div className="tab-content">
          <h3>–ú–æ–∏ —É—á–∞—Å—Ç–∏—è –≤ –∑–∞–∫—É–ø–∫–∞—Ö</h3>
          
          {participationsLoading ? (
            <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —É—á–∞—Å—Ç–∏–π...</div>
          ) : userParticipations.length === 0 ? (
            <div className="empty-state">
              <p>–í—ã –µ—â–µ –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –∑–∞–∫—É–ø–∫–∞—Ö</p>
            </div>
          ) : (
            <div className="participations-list">
              {userParticipations.map(participation => (
                <div key={participation.procurement_id} className="participation-item">
                  <div className="participation-info">
                    <h4>{participation.procurement_title}</h4>
                    <div className="participation-details">
                      <span className="status-badge">{participation.status}</span>
                      <span>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞: {formatPrice(participation.proposed_price)} ‚ÇΩ</span>
                      <span>–î–∞—Ç–∞: {formatDate(participation.created_at)}</span>
                    </div>
                    <p className="customer">–ó–∞–∫–∞–∑—á–∏–∫: {participation.customer_name}</p>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      {/* –í–∫–ª–∞–¥–∫–∞ –ú–æ–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏ */}
      {activeTab === 'drafts' && (
        <div className="tab-content">
          <h3>–ú–æ–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏ –∑–∞–∫—É–ø–æ–∫</h3>
          
          {draftsLoading ? (
            <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤...</div>
          ) : drafts.length === 0 ? (
            <div className="empty-state">
              <p>–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤</p>
              <p>–°–æ–∑–¥–∞–π—Ç–µ –∑–∞–∫—É–ø–∫—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫" —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
            </div>
          ) : (
            <div className="drafts-list">
              {drafts.map(draft => (
                <div key={draft.id} className="draft-item">
                  <div className="draft-info">
                    <h4>{draft.title}</h4>
                    <div className="draft-details">
                      <span>–¢–æ–≤–∞—Ä–æ–≤: {draft.products_data ? JSON.parse(draft.products_data).length : 0}</span>
                      <span>–®–∞–≥: {draft.step || 1}</span>
                      <span>–û–±–Ω–æ–≤–ª–µ–Ω: {formatDate(draft.updated_at)}</span>
                      {draft.estimated_price > 0 && (
                        <span>–¶–µ–Ω–∞: {formatPrice(draft.estimated_price)} ‚ÇΩ</span>
                      )}
                    </div>
                    {draft.customer_name && (
                      <p className="customer">–ó–∞–∫–∞–∑—á–∏–∫: {draft.customer_name}</p>
                    )}
                    {draft.description && (
                      <p className="description">{draft.description}</p>
                    )}
                  </div>
                  <div className="draft-actions">
                    <button 
                      className="btn-primary btn-small"
                      onClick={() => handleContinueDraft(draft)}
                    >
                      –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                    </button>
                    <button 
                      className="btn-outline btn-small"
                      onClick={() => handleCreateFromDraft(draft)}
                    >
                      –°–æ–∑–¥–∞—Ç—å –∑–∞–∫—É–ø–∫—É
                    </button>
                    <button 
                      className="btn-outline btn-small"
                      onClick={() => handleDeleteDraft(draft.id, draft.title)}
                    >
                      –£–¥–∞–ª–∏—Ç—å
                    </button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      <div className="profile-footer">
        <button className="btn-outline" onClick={onClose}>
          –ó–∞–∫—Ä—ã—Ç—å
        </button>
      </div>
    </div>
  );
}

export default UserProfile;